// ScriptStruct SwimmingAnimBP.SwimmingAnimBP_C.AnimBlueprintGeneratedConstantData
// Size: 0x368 (Inherited: 0x01)
struct FAnimBlueprintGeneratedConstantData : FAnimBlueprintConstantData {
	char pad_1[0x3]; // 0x01(0x03)
	struct FName ; // 0x04(0x04)
	struct TArray<int32_t> ; // 0x08(0x10)
	struct FName ; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct UBlendSpace* ; // 0x20(0x08)
	struct UBlendSpace* ; // 0x28(0x08)
	struct UAnimSequenceBase* ; // 0x30(0x08)
	struct FAnimNodeFunctionRef ; // 0x38(0x18)
	struct FName ; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct UAnimSequenceBase* ; // 0x58(0x08)
	struct FName ; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct UAnimSequenceBase* ; // 0x68(0x08)
	struct FName ; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct UAnimSequenceBase* ; // 0x78(0x08)
	struct FName ; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct UAnimSequenceBase* ; // 0x88(0x08)
	struct UAnimSequenceBase* ; // 0x90(0x08)
	struct FName ; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct UAnimSequenceBase* ; // 0xa0(0x08)
	struct FName ; // 0xa8(0x04)
	struct FName ; // 0xac(0x04)
	struct UAnimSequenceBase* ; // 0xb0(0x08)
	struct FName ; // 0xb8(0x04)
	enum class EBlendListTransitionType ; // 0xbc(0x01)
	char pad_BD[0x3]; // 0xbd(0x03)
	struct TArray<float> ; // 0xc0(0x10)
	struct UAnimSequenceBase* ; // 0xd0(0x08)
	struct FName ; // 0xd8(0x04)
	struct FName ; // 0xdc(0x04)
	struct UAnimSequenceBase* ; // 0xe0(0x08)
	struct TArray<float> ; // 0xe8(0x10)
	struct UAnimSequenceBase* ; // 0xf8(0x08)
	struct FName ; // 0x100(0x04)
	struct FName ; // 0x104(0x04)
	struct UBlendSpace* ; // 0x108(0x08)
	float ; // 0x110(0x04)
	struct FName ; // 0x114(0x04)
	float ; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)
	struct UAnimSequenceBase* ; // 0x120(0x08)
	struct FName ; // 0x128(0x04)
	struct FName ; // 0x12c(0x04)
	struct UAnimSequenceBase* ; // 0x130(0x08)
	struct FName ; // 0x138(0x04)
	struct FName ; // 0x13c(0x04)
	struct FName ; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
	struct UBlendSpace* ; // 0x148(0x08)
	struct FName ; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
	struct UBlendSpace* ; // 0x158(0x08)
	struct UBlendSpace* ; // 0x160(0x08)
	struct FName ; // 0x168(0x04)
	char pad_16C[0x4]; // 0x16c(0x04)
	struct UBlendSpace* ; // 0x170(0x08)
	struct TArray<float> ; // 0x178(0x10)
	struct TArray<int32_t> ; // 0x188(0x10)
	struct UBlendSpace* ; // 0x198(0x08)
	struct FName ; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)
	struct UBlendSpace* ; // 0x1a8(0x08)
	struct FName ; // 0x1b0(0x04)
	struct FName ; // 0x1b4(0x04)
	struct UAnimSequenceBase* ; // 0x1b8(0x08)
	struct FName ; // 0x1c0(0x04)
	struct FName ; // 0x1c4(0x04)
	int32_t ; // 0x1c8(0x04)
	struct FName ; // 0x1cc(0x04)
	int32_t ; // 0x1d0(0x04)
	char pad_1D4[0x4]; // 0x1d4(0x04)
	struct UBlendSpace* ; // 0x1d8(0x08)
	struct UBlendSpace* ; // 0x1e0(0x08)
	float ; // 0x1e8(0x04)
	struct FName ; // 0x1ec(0x04)
	struct FName ; // 0x1f0(0x04)
	int32_t ; // 0x1f4(0x04)
	struct FInputScaleBiasClampConstants ; // 0x1f8(0x2c)
	char pad_224[0x4]; // 0x224(0x04)
	struct UAnimSequenceBase* ; // 0x228(0x08)
	struct FName ; // 0x230(0x04)
	struct FName ; // 0x234(0x04)
	int32_t ; // 0x238(0x04)
	struct FName ; // 0x23c(0x04)
	int32_t ; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct UBlendSpace* ; // 0x248(0x08)
	float ; // 0x250(0x04)
	enum class EAnimSyncMethod ; // 0x254(0x01)
	enum class EAnimGroupRole ; // 0x255(0x01)
	char pad_256[0x2]; // 0x256(0x02)
	struct FName ; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct TArray<float> ; // 0x260(0x10)
	struct FName ; // 0x270(0x04)
	struct FName ; // 0x274(0x04)
	struct FName ; // 0x278(0x04)
	enum class ESequenceEvalReinit ; // 0x27c(0x01)
	char pad_27D[0x3]; // 0x27d(0x03)
	float ; // 0x280(0x04)
	enum class EAnimSyncMethod ; // 0x284(0x01)
	enum class EAnimGroupRole ; // 0x285(0x01)
	bool ; // 0x286(0x01)
	char pad_287[0x1]; // 0x287(0x01)
	struct UBlendProfile* ; // 0x288(0x08)
	struct UCurveFloat* ; // 0x290(0x08)
	bool ; // 0x298(0x01)
	enum class EAlphaBlendOption ; // 0x299(0x01)
	enum class EBlendListTransitionType ; // 0x29a(0x01)
	char pad_29B[0x5]; // 0x29b(0x05)
	struct TArray<float> ; // 0x2a0(0x10)
	struct FAnimNodeFunctionRef ; // 0x2b0(0x18)
	struct FName ; // 0x2c8(0x04)
	struct FName ; // 0x2cc(0x04)
	struct FAnimSubsystem_PropertyAccess AnimBlueprintExtension_PropertyAccess; // 0x2d0(0x80)
	struct FAnimSubsystem_Base AnimBlueprintExtension_Base; // 0x350(0x18)
};

// ScriptStruct SwimmingAnimBP.SwimmingAnimBP_C.AnimBlueprintGeneratedMutableData
// Size: 0x102 (Inherited: 0x01)
struct FAnimBlueprintGeneratedMutableData : FAnimBlueprintMutableData {
	bool __BoolProperty; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct UBlendSpace* ; // 0x08(0x08)
	float ; // 0x10(0x04)
	char ; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
	float ; // 0x18(0x04)
	float ; // 0x1c(0x04)
	float ; // 0x20(0x04)
	bool ; // 0x24(0x01)
	char ; // 0x25(0x01)
	bool ; // 0x26(0x01)
	char pad_27[0x1]; // 0x27(0x01)
	struct UBlendSpace* ; // 0x28(0x08)
	float ; // 0x30(0x04)
	bool ; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	struct UAnimSequenceBase* ; // 0x38(0x08)
	struct UAnimSequenceBase* ; // 0x40(0x08)
	bool ; // 0x48(0x01)
	bool ; // 0x49(0x01)
	char pad_4A[0x6]; // 0x4a(0x06)
	struct UAnimSequenceBase* ; // 0x50(0x08)
	bool ; // 0x58(0x01)
	bool ; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)
	struct UAnimSequenceBase* ; // 0x60(0x08)
	struct UBlendSpace* ; // 0x68(0x08)
	float ; // 0x70(0x04)
	bool ; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	float ; // 0x78(0x04)
	bool ; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
	float ; // 0x80(0x04)
	float ; // 0x84(0x04)
	float ; // 0x88(0x04)
	float ; // 0x8c(0x04)
	char ; // 0x90(0x01)
	char pad_91[0x3]; // 0x91(0x03)
	float ; // 0x94(0x04)
	float ; // 0x98(0x04)
	char ; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
	float ; // 0xa0(0x04)
	bool ; // 0xa4(0x01)
	char pad_A5[0x3]; // 0xa5(0x03)
	struct UBlendSpace* ; // 0xa8(0x08)
	float ; // 0xb0(0x04)
	float ; // 0xb4(0x04)
	float ; // 0xb8(0x04)
	float ; // 0xbc(0x04)
	float ; // 0xc0(0x04)
	float ; // 0xc4(0x04)
	float ; // 0xc8(0x04)
	bool ; // 0xcc(0x01)
	bool ; // 0xcd(0x01)
	char pad_CE[0x2]; // 0xce(0x02)
	float ; // 0xd0(0x04)
	float ; // 0xd4(0x04)
	bool ; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
	struct UAnimSequenceBase* ; // 0xe0(0x08)
	struct UAnimSequenceBase* ; // 0xe8(0x08)
	struct TArray<float> ; // 0xf0(0x10)
	bool ; // 0x100(0x01)
	bool ; // 0x101(0x01)
};


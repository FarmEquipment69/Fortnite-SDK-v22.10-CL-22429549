// ScriptStruct Fortnite_M_Avg_Player_AnimBlueprint.Fortnite_M_Avg_Player_AnimBlueprint_C.AnimBlueprintGeneratedConstantData
// Size: 0x768 (Inherited: 0x01)
struct FAnimBlueprintGeneratedConstantData : FAnimBlueprintConstantData {
	char pad_1[0x3]; // 0x01(0x03)
	struct FName ; // 0x04(0x04)
	struct FName ; // 0x08(0x04)
	struct FName ; // 0x0c(0x04)
	struct FName ; // 0x10(0x04)
	struct FName ; // 0x14(0x04)
	struct FName ; // 0x18(0x04)
	struct FName ; // 0x1c(0x04)
	struct FName ; // 0x20(0x04)
	struct FName ; // 0x24(0x04)
	struct FName ; // 0x28(0x04)
	struct FName ; // 0x2c(0x04)
	struct FName ; // 0x30(0x04)
	struct FName ; // 0x34(0x04)
	struct FName ; // 0x38(0x04)
	struct FName ; // 0x3c(0x04)
	struct FName ; // 0x40(0x04)
	struct FName ; // 0x44(0x04)
	float ; // 0x48(0x04)
	struct FName ; // 0x4c(0x04)
	float ; // 0x50(0x04)
	struct FName ; // 0x54(0x04)
	float ; // 0x58(0x04)
	struct FName ; // 0x5c(0x04)
	struct FName ; // 0x60(0x04)
	struct FName ; // 0x64(0x04)
	struct UAnimSequenceBase* ; // 0x68(0x08)
	struct UAnimSequenceBase* ; // 0x70(0x08)
	struct UAnimSequenceBase* ; // 0x78(0x08)
	struct FName ; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct UAnimSequenceBase* ; // 0x88(0x08)
	struct UAnimSequenceBase* ; // 0x90(0x08)
	float ; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct UAnimSequenceBase* ; // 0xa0(0x08)
	struct FName ; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct UAnimSequenceBase* ; // 0xb0(0x08)
	struct UAnimSequenceBase* ; // 0xb8(0x08)
	struct UAnimSequenceBase* ; // 0xc0(0x08)
	struct TArray<float> ; // 0xc8(0x10)
	struct TArray<int32_t> ; // 0xd8(0x10)
	struct FName ; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct UAnimSequenceBase* ; // 0xf0(0x08)
	struct TArray<int32_t> ; // 0xf8(0x10)
	struct TArray<int32_t> ; // 0x108(0x10)
	struct TArray<float> ; // 0x118(0x10)
	struct TArray<int32_t> ; // 0x128(0x10)
	struct UAnimSequenceBase* ; // 0x138(0x08)
	struct UAnimSequenceBase* ; // 0x140(0x08)
	struct UAnimSequenceBase* ; // 0x148(0x08)
	struct UAnimSequenceBase* ; // 0x150(0x08)
	struct UAnimSequenceBase* ; // 0x158(0x08)
	struct TArray<float> ; // 0x160(0x10)
	struct TArray<int32_t> ; // 0x170(0x10)
	struct UAnimSequenceBase* ; // 0x180(0x08)
	struct UAnimSequenceBase* ; // 0x188(0x08)
	struct FName ; // 0x190(0x04)
	struct FName ; // 0x194(0x04)
	struct FName ; // 0x198(0x04)
	struct FName ; // 0x19c(0x04)
	struct FName ; // 0x1a0(0x04)
	struct FName ; // 0x1a4(0x04)
	struct TArray<float> ; // 0x1a8(0x10)
	struct FName ; // 0x1b8(0x04)
	struct FName ; // 0x1bc(0x04)
	struct FName ; // 0x1c0(0x04)
	struct FName ; // 0x1c4(0x04)
	struct FName ; // 0x1c8(0x04)
	struct FName ; // 0x1cc(0x04)
	struct FName ; // 0x1d0(0x04)
	struct FName ; // 0x1d4(0x04)
	struct TArray<float> ; // 0x1d8(0x10)
	struct TArray<int32_t> ; // 0x1e8(0x10)
	struct FName ; // 0x1f8(0x04)
	char pad_1FC[0x4]; // 0x1fc(0x04)
	struct TArray<float> ; // 0x200(0x10)
	struct TArray<float> ; // 0x210(0x10)
	struct TArray<int32_t> ; // 0x220(0x10)
	struct TArray<float> ; // 0x230(0x10)
	struct UBlendSpace* ; // 0x240(0x08)
	struct UBlendSpace* ; // 0x248(0x08)
	struct FName ; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct TArray<float> ; // 0x258(0x10)
	struct FName ; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct UAnimSequenceBase* ; // 0x270(0x08)
	struct UAnimSequenceBase* ; // 0x278(0x08)
	struct UAnimSequenceBase* ; // 0x280(0x08)
	struct UAnimSequenceBase* ; // 0x288(0x08)
	struct TArray<float> ; // 0x290(0x10)
	struct TArray<int32_t> ; // 0x2a0(0x10)
	struct UAnimSequenceBase* ; // 0x2b0(0x08)
	struct FName ; // 0x2b8(0x04)
	struct FName ; // 0x2bc(0x04)
	struct FName ; // 0x2c0(0x04)
	struct FName ; // 0x2c4(0x04)
	struct FName ; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)
	struct TArray<float> ; // 0x2d0(0x10)
	struct TArray<float> ; // 0x2e0(0x10)
	struct FName ; // 0x2f0(0x04)
	struct FName ; // 0x2f4(0x04)
	struct TArray<int32_t> ; // 0x2f8(0x10)
	enum class EAnimGroupRole ; // 0x308(0x01)
	char pad_309[0x3]; // 0x309(0x03)
	struct FName ; // 0x30c(0x04)
	struct FName ; // 0x310(0x04)
	struct FName ; // 0x314(0x04)
	struct UAnimSequenceBase* ; // 0x318(0x08)
	struct FName ; // 0x320(0x04)
	struct FName ; // 0x324(0x04)
	struct FName ; // 0x328(0x04)
	struct FName ; // 0x32c(0x04)
	struct FName ; // 0x330(0x04)
	struct FName ; // 0x334(0x04)
	struct FName ; // 0x338(0x04)
	struct FName ; // 0x33c(0x04)
	int32_t ; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	struct UAnimSequenceBase* ; // 0x348(0x08)
	struct FName ; // 0x350(0x04)
	char pad_354[0x4]; // 0x354(0x04)
	struct UAnimSequenceBase* ; // 0x358(0x08)
	struct FName ; // 0x360(0x04)
	struct FName ; // 0x364(0x04)
	int32_t ; // 0x368(0x04)
	char pad_36C[0x4]; // 0x36c(0x04)
	struct UAnimSequenceBase* ; // 0x370(0x08)
	struct TArray<int32_t> ; // 0x378(0x10)
	struct UAnimSequenceBase* ; // 0x388(0x08)
	struct FName ; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UAnimSequenceBase* ; // 0x398(0x08)
	struct FName ; // 0x3a0(0x04)
	struct FName ; // 0x3a4(0x04)
	struct UAnimSequenceBase* ; // 0x3a8(0x08)
	struct FName ; // 0x3b0(0x04)
	struct FName ; // 0x3b4(0x04)
	struct UBlendSpace* ; // 0x3b8(0x08)
	struct FName ; // 0x3c0(0x04)
	struct FName ; // 0x3c4(0x04)
	struct FName ; // 0x3c8(0x04)
	char pad_3CC[0x4]; // 0x3cc(0x04)
	struct TArray<float> ; // 0x3d0(0x10)
	struct FName ; // 0x3e0(0x04)
	struct FName ; // 0x3e4(0x04)
	enum class EBlendListTransitionType ; // 0x3e8(0x01)
	char pad_3E9[0x3]; // 0x3e9(0x03)
	struct FName ; // 0x3ec(0x04)
	struct FName ; // 0x3f0(0x04)
	struct FName ; // 0x3f4(0x04)
	struct UAnimSequenceBase* ; // 0x3f8(0x08)
	struct UAnimSequenceBase* ; // 0x400(0x08)
	struct UAnimSequenceBase* ; // 0x408(0x08)
	struct UAnimSequenceBase* ; // 0x410(0x08)
	struct TArray<float> ; // 0x418(0x10)
	struct TArray<int32_t> ; // 0x428(0x10)
	struct UAnimSequenceBase* ; // 0x438(0x08)
	struct FName ; // 0x440(0x04)
	char pad_444[0x4]; // 0x444(0x04)
	struct FAnimNodeFunctionRef ; // 0x448(0x18)
	struct FName ; // 0x460(0x04)
	char pad_464[0x4]; // 0x464(0x04)
	struct FAnimNodeFunctionRef ; // 0x468(0x18)
	struct FName ; // 0x480(0x04)
	int32_t ; // 0x484(0x04)
	struct UAnimSequenceBase* ; // 0x488(0x08)
	struct UAnimSequenceBase* ; // 0x490(0x08)
	struct FName ; // 0x498(0x04)
	char pad_49C[0x4]; // 0x49c(0x04)
	struct TArray<float> ; // 0x4a0(0x10)
	struct TArray<int32_t> ; // 0x4b0(0x10)
	struct UAnimSequenceBase* ; // 0x4c0(0x08)
	struct UAnimSequenceBase* ; // 0x4c8(0x08)
	struct UBlendSpace* ; // 0x4d0(0x08)
	struct FName ; // 0x4d8(0x04)
	struct FName ; // 0x4dc(0x04)
	int32_t ; // 0x4e0(0x04)
	struct FName ; // 0x4e4(0x04)
	struct FName ; // 0x4e8(0x04)
	struct FName ; // 0x4ec(0x04)
	struct FName ; // 0x4f0(0x04)
	char pad_4F4[0x4]; // 0x4f4(0x04)
	struct UAnimSequenceBase* ; // 0x4f8(0x08)
	struct FName ; // 0x500(0x04)
	char pad_504[0x4]; // 0x504(0x04)
	struct UAnimSequenceBase* ; // 0x508(0x08)
	struct FName ; // 0x510(0x04)
	char pad_514[0x4]; // 0x514(0x04)
	struct UAnimSequenceBase* ; // 0x518(0x08)
	struct FName ; // 0x520(0x04)
	struct FName ; // 0x524(0x04)
	struct FName ; // 0x528(0x04)
	int32_t ; // 0x52c(0x04)
	struct UBlendSpace* ; // 0x530(0x08)
	struct TArray<float> ; // 0x538(0x10)
	struct UBlendSpace* ; // 0x548(0x08)
	enum class EAlphaBlendOption ; // 0x550(0x01)
	char pad_551[0x7]; // 0x551(0x07)
	struct TArray<float> ; // 0x558(0x10)
	struct TArray<int32_t> ; // 0x568(0x10)
	struct UBlendSpace* ; // 0x578(0x08)
	enum class EAnimSyncMethod ; // 0x580(0x01)
	char pad_581[0x3]; // 0x581(0x03)
	struct FName ; // 0x584(0x04)
	bool ; // 0x588(0x01)
	char pad_589[0x3]; // 0x589(0x03)
	float ; // 0x58c(0x04)
	struct FInputScaleBiasClampConstants ; // 0x590(0x2c)
	float ; // 0x5bc(0x04)
	struct UAnimSequenceBase* ; // 0x5c0(0x08)
	enum class EAnimSyncMethod ; // 0x5c8(0x01)
	char pad_5C9[0x3]; // 0x5c9(0x03)
	struct FName ; // 0x5cc(0x04)
	int32_t ; // 0x5d0(0x04)
	enum class ERefPoseType ; // 0x5d4(0x01)
	char pad_5D5[0x3]; // 0x5d5(0x03)
	struct FName ; // 0x5d8(0x04)
	int32_t ; // 0x5dc(0x04)
	struct TArray<float> ; // 0x5e0(0x10)
	struct TArray<float> ; // 0x5f0(0x10)
	enum class ERefPoseType ; // 0x600(0x01)
	char pad_601[0x7]; // 0x601(0x07)
	struct TArray<float> ; // 0x608(0x10)
	struct FName ; // 0x618(0x04)
	struct FName ; // 0x61c(0x04)
	int32_t ; // 0x620(0x04)
	char pad_624[0x4]; // 0x624(0x04)
	struct FAnimNodeFunctionRef ; // 0x628(0x18)
	struct UBlendProfile* ; // 0x640(0x08)
	struct UCurveFloat* ; // 0x648(0x08)
	bool ; // 0x650(0x01)
	enum class EAlphaBlendOption ; // 0x651(0x01)
	enum class EBlendListTransitionType ; // 0x652(0x01)
	char pad_653[0x5]; // 0x653(0x05)
	struct TArray<float> ; // 0x658(0x10)
	struct FAnimSubsystem_Tag AnimBlueprintExtension_Tag; // 0x668(0x60)
	struct FAnimSubsystem_PropertyAccess AnimBlueprintExtension_PropertyAccess; // 0x6c8(0x80)
	struct FAnimSubsystem AnimBlueprintExtension_NodeRelevancy; // 0x748(0x08)
	struct FAnimSubsystem_Base AnimBlueprintExtension_Base; // 0x750(0x18)
};

// ScriptStruct Fortnite_M_Avg_Player_AnimBlueprint.Fortnite_M_Avg_Player_AnimBlueprint_C.AnimBlueprintGeneratedMutableData
// Size: 0x569 (Inherited: 0x01)
struct FAnimBlueprintGeneratedMutableData : FAnimBlueprintMutableData {
	char pad_1[0x7]; // 0x01(0x07)
	struct UAnimSequenceBase* __AnimSequenceBase; // 0x08(0x08)
	bool ; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct UAnimSequenceBase* ; // 0x18(0x08)
	bool ; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
	struct UAnimSequenceBase* ; // 0x28(0x08)
	bool ; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct UAnimSequenceBase* ; // 0x38(0x08)
	struct UAnimSequenceBase* ; // 0x40(0x08)
	bool ; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct UAnimSequenceBase* ; // 0x50(0x08)
	struct TArray<float> ; // 0x58(0x10)
	bool ; // 0x68(0x01)
	bool ; // 0x69(0x01)
	bool ; // 0x6a(0x01)
	char ; // 0x6b(0x01)
	bool ; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	struct UAnimSequenceBase* ; // 0x70(0x08)
	struct TArray<float> ; // 0x78(0x10)
	bool ; // 0x88(0x01)
	bool ; // 0x89(0x01)
	bool ; // 0x8a(0x01)
	char ; // 0x8b(0x01)
	float ; // 0x8c(0x04)
	struct UAnimSequenceBase* ; // 0x90(0x08)
	bool ; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float ; // 0x9c(0x04)
	float ; // 0xa0(0x04)
	bool ; // 0xa4(0x01)
	char pad_A5[0x3]; // 0xa5(0x03)
	float ; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct TArray<float> ; // 0xb0(0x10)
	bool ; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	float ; // 0xc4(0x04)
	bool ; // 0xc8(0x01)
	char pad_C9[0x3]; // 0xc9(0x03)
	float ; // 0xcc(0x04)
	bool ; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	float ; // 0xd4(0x04)
	char ; // 0xd8(0x01)
	bool ; // 0xd9(0x01)
	bool ; // 0xda(0x01)
	bool ; // 0xdb(0x01)
	char ; // 0xdc(0x01)
	char ; // 0xdd(0x01)
	char ; // 0xde(0x01)
	bool ; // 0xdf(0x01)
	struct TArray<float> ; // 0xe0(0x10)
	bool ; // 0xf0(0x01)
	char ; // 0xf1(0x01)
	bool ; // 0xf2(0x01)
	char ; // 0xf3(0x01)
	bool ; // 0xf4(0x01)
	char ; // 0xf5(0x01)
	bool ; // 0xf6(0x01)
	bool ; // 0xf7(0x01)
	bool ; // 0xf8(0x01)
	char ; // 0xf9(0x01)
	char pad_FA[0x6]; // 0xfa(0x06)
	struct UBlendSpace* ; // 0x100(0x08)
	float ; // 0x108(0x04)
	float ; // 0x10c(0x04)
	float ; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	struct UBlendSpace* ; // 0x118(0x08)
	float ; // 0x120(0x04)
	float ; // 0x124(0x04)
	float ; // 0x128(0x04)
	bool ; // 0x12c(0x01)
	char ; // 0x12d(0x01)
	bool ; // 0x12e(0x01)
	char pad_12F[0x1]; // 0x12f(0x01)
	struct UBlendSpace* ; // 0x130(0x08)
	float ; // 0x138(0x04)
	float ; // 0x13c(0x04)
	float ; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
	struct UBlendSpace* ; // 0x148(0x08)
	float ; // 0x150(0x04)
	float ; // 0x154(0x04)
	float ; // 0x158(0x04)
	bool ; // 0x15c(0x01)
	char pad_15D[0x3]; // 0x15d(0x03)
	struct UBlendSpace* ; // 0x160(0x08)
	float ; // 0x168(0x04)
	float ; // 0x16c(0x04)
	float ; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct UBlendSpace* ; // 0x178(0x08)
	float ; // 0x180(0x04)
	float ; // 0x184(0x04)
	float ; // 0x188(0x04)
	bool ; // 0x18c(0x01)
	char pad_18D[0x3]; // 0x18d(0x03)
	struct UBlendSpace* ; // 0x190(0x08)
	float ; // 0x198(0x04)
	float ; // 0x19c(0x04)
	float ; // 0x1a0(0x04)
	bool ; // 0x1a4(0x01)
	char pad_1A5[0x3]; // 0x1a5(0x03)
	struct UBlendSpace* ; // 0x1a8(0x08)
	float ; // 0x1b0(0x04)
	float ; // 0x1b4(0x04)
	float ; // 0x1b8(0x04)
	char ; // 0x1bc(0x01)
	char pad_1BD[0x3]; // 0x1bd(0x03)
	float ; // 0x1c0(0x04)
	float ; // 0x1c4(0x04)
	float ; // 0x1c8(0x04)
	float ; // 0x1cc(0x04)
	bool ; // 0x1d0(0x01)
	char pad_1D1[0x7]; // 0x1d1(0x07)
	struct UBlendSpace* ; // 0x1d8(0x08)
	float ; // 0x1e0(0x04)
	float ; // 0x1e4(0x04)
	float ; // 0x1e8(0x04)
	char pad_1EC[0x4]; // 0x1ec(0x04)
	struct UBlendSpace* ; // 0x1f0(0x08)
	float ; // 0x1f8(0x04)
	float ; // 0x1fc(0x04)
	float ; // 0x200(0x04)
	bool ; // 0x204(0x01)
	char ; // 0x205(0x01)
	bool ; // 0x206(0x01)
	char pad_207[0x1]; // 0x207(0x01)
	struct UBlendSpace* ; // 0x208(0x08)
	float ; // 0x210(0x04)
	float ; // 0x214(0x04)
	float ; // 0x218(0x04)
	bool ; // 0x21c(0x01)
	char pad_21D[0x3]; // 0x21d(0x03)
	struct UBlendSpace* ; // 0x220(0x08)
	float ; // 0x228(0x04)
	float ; // 0x22c(0x04)
	float ; // 0x230(0x04)
	bool ; // 0x234(0x01)
	char pad_235[0x3]; // 0x235(0x03)
	struct UBlendSpace* ; // 0x238(0x08)
	float ; // 0x240(0x04)
	float ; // 0x244(0x04)
	float ; // 0x248(0x04)
	bool ; // 0x24c(0x01)
	char pad_24D[0x3]; // 0x24d(0x03)
	struct UBlendSpace* ; // 0x250(0x08)
	float ; // 0x258(0x04)
	float ; // 0x25c(0x04)
	float ; // 0x260(0x04)
	char ; // 0x264(0x01)
	char pad_265[0x3]; // 0x265(0x03)
	float ; // 0x268(0x04)
	float ; // 0x26c(0x04)
	float ; // 0x270(0x04)
	float ; // 0x274(0x04)
	bool ; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	float ; // 0x27c(0x04)
	float ; // 0x280(0x04)
	float ; // 0x284(0x04)
	float ; // 0x288(0x04)
	float ; // 0x28c(0x04)
	float ; // 0x290(0x04)
	float ; // 0x294(0x04)
	char ; // 0x298(0x01)
	char pad_299[0x3]; // 0x299(0x03)
	float ; // 0x29c(0x04)
	struct TArray<float> ; // 0x2a0(0x10)
	char ; // 0x2b0(0x01)
	char pad_2B1[0x3]; // 0x2b1(0x03)
	float ; // 0x2b4(0x04)
	float ; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	struct UAnimSequenceBase* ; // 0x2c0(0x08)
	float ; // 0x2c8(0x04)
	float ; // 0x2cc(0x04)
	struct UAnimSequenceBase* ; // 0x2d0(0x08)
	float ; // 0x2d8(0x04)
	float ; // 0x2dc(0x04)
	struct UAnimSequenceBase* ; // 0x2e0(0x08)
	float ; // 0x2e8(0x04)
	float ; // 0x2ec(0x04)
	struct UAnimSequenceBase* ; // 0x2f0(0x08)
	struct TArray<float> ; // 0x2f8(0x10)
	char ; // 0x308(0x01)
	char pad_309[0x3]; // 0x309(0x03)
	float ; // 0x30c(0x04)
	struct UAnimSequenceBase* ; // 0x310(0x08)
	float ; // 0x318(0x04)
	char pad_31C[0x4]; // 0x31c(0x04)
	struct UAnimSequenceBase* ; // 0x320(0x08)
	float ; // 0x328(0x04)
	char pad_32C[0x4]; // 0x32c(0x04)
	struct UAnimSequenceBase* ; // 0x330(0x08)
	float ; // 0x338(0x04)
	char pad_33C[0x4]; // 0x33c(0x04)
	struct UAnimSequenceBase* ; // 0x340(0x08)
	char ; // 0x348(0x01)
	char pad_349[0x7]; // 0x349(0x07)
	struct UAnimSequenceBase* ; // 0x350(0x08)
	bool ; // 0x358(0x01)
	char pad_359[0x7]; // 0x359(0x07)
	struct UAnimSequenceBase* ; // 0x360(0x08)
	struct UAnimSequenceBase* ; // 0x368(0x08)
	struct UAnimSequenceBase* ; // 0x370(0x08)
	struct UAnimSequenceBase* ; // 0x378(0x08)
	struct TArray<float> ; // 0x380(0x10)
	char ; // 0x390(0x01)
	char pad_391[0x7]; // 0x391(0x07)
	struct UAnimSequenceBase* ; // 0x398(0x08)
	float ; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)
	struct UAnimSequenceBase* ; // 0x3a8(0x08)
	float ; // 0x3b0(0x04)
	char pad_3B4[0x4]; // 0x3b4(0x04)
	struct UAnimSequenceBase* ; // 0x3b8(0x08)
	float ; // 0x3c0(0x04)
	char pad_3C4[0x4]; // 0x3c4(0x04)
	struct UAnimSequenceBase* ; // 0x3c8(0x08)
	float ; // 0x3d0(0x04)
	char pad_3D4[0x4]; // 0x3d4(0x04)
	struct UAnimSequenceBase* ; // 0x3d8(0x08)
	struct UAnimSequenceBase* ; // 0x3e0(0x08)
	struct UAnimSequenceBase* ; // 0x3e8(0x08)
	bool ; // 0x3f0(0x01)
	bool ; // 0x3f1(0x01)
	bool ; // 0x3f2(0x01)
	char pad_3F3[0x5]; // 0x3f3(0x05)
	struct UAnimSequenceBase* ; // 0x3f8(0x08)
	struct UAnimSequenceBase* ; // 0x400(0x08)
	struct UAnimSequenceBase* ; // 0x408(0x08)
	struct TArray<float> ; // 0x410(0x10)
	bool ; // 0x420(0x01)
	bool ; // 0x421(0x01)
	char pad_422[0x6]; // 0x422(0x06)
	struct UAnimSequenceBase* ; // 0x428(0x08)
	struct UAnimSequenceBase* ; // 0x430(0x08)
	bool ; // 0x438(0x01)
	char ; // 0x439(0x01)
	char pad_43A[0x6]; // 0x43a(0x06)
	struct UAnimSequenceBase* ; // 0x440(0x08)
	struct UBlendSpace* ; // 0x448(0x08)
	float ; // 0x450(0x04)
	float ; // 0x454(0x04)
	struct TArray<float> ; // 0x458(0x10)
	bool ; // 0x468(0x01)
	bool ; // 0x469(0x01)
	char pad_46A[0x6]; // 0x46a(0x06)
	struct UBlendSpace* ; // 0x470(0x08)
	float ; // 0x478(0x04)
	float ; // 0x47c(0x04)
	struct UBlendSpace* ; // 0x480(0x08)
	float ; // 0x488(0x04)
	float ; // 0x48c(0x04)
	char ; // 0x490(0x01)
	char pad_491[0x3]; // 0x491(0x03)
	float ; // 0x494(0x04)
	struct UAnimSequenceBase* ; // 0x498(0x08)
	struct TArray<float> ; // 0x4a0(0x10)
	bool ; // 0x4b0(0x01)
	bool ; // 0x4b1(0x01)
	bool ; // 0x4b2(0x01)
	bool ; // 0x4b3(0x01)
	char pad_4B4[0x4]; // 0x4b4(0x04)
	struct UAnimSequenceBase* ; // 0x4b8(0x08)
	bool ; // 0x4c0(0x01)
	char pad_4C1[0x7]; // 0x4c1(0x07)
	struct UAnimSequenceBase* ; // 0x4c8(0x08)
	struct UAnimSequenceBase* ; // 0x4d0(0x08)
	bool ; // 0x4d8(0x01)
	char ; // 0x4d9(0x01)
	bool ; // 0x4da(0x01)
	char ; // 0x4db(0x01)
	char pad_4DC[0x4]; // 0x4dc(0x04)
	struct UAnimSequenceBase* ; // 0x4e0(0x08)
	struct TArray<float> ; // 0x4e8(0x10)
	bool ; // 0x4f8(0x01)
	bool ; // 0x4f9(0x01)
	char pad_4FA[0x2]; // 0x4fa(0x02)
	float ; // 0x4fc(0x04)
	float ; // 0x500(0x04)
	char ; // 0x504(0x01)
	char pad_505[0x3]; // 0x505(0x03)
	struct UAnimSequenceBase* ; // 0x508(0x08)
	struct TArray<float> ; // 0x510(0x10)
	bool ; // 0x520(0x01)
	bool ; // 0x521(0x01)
	char pad_522[0x2]; // 0x522(0x02)
	float ; // 0x524(0x04)
	float ; // 0x528(0x04)
	bool ; // 0x52c(0x01)
	char pad_52D[0x3]; // 0x52d(0x03)
	float ; // 0x530(0x04)
	float ; // 0x534(0x04)
	float ; // 0x538(0x04)
	float ; // 0x53c(0x04)
	bool ; // 0x540(0x01)
	char pad_541[0x3]; // 0x541(0x03)
	float ; // 0x544(0x04)
	float ; // 0x548(0x04)
	float ; // 0x54c(0x04)
	float ; // 0x550(0x04)
	char ; // 0x554(0x01)
	char pad_555[0x3]; // 0x555(0x03)
	float ; // 0x558(0x04)
	float ; // 0x55c(0x04)
	bool ; // 0x560(0x01)
	bool ; // 0x561(0x01)
	bool ; // 0x562(0x01)
	char pad_563[0x1]; // 0x563(0x01)
	int32_t ; // 0x564(0x04)
	bool ; // 0x568(0x01)
};

